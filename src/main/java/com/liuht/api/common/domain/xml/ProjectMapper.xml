<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuht.api.common.domain.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.liuht.api.common.domain.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="teamId" jdbcType="INTEGER" property="teamid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="envId" jdbcType="INTEGER" property="envid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, teamId, createTime, userId, status, permission, envId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liuht.api.common.domain.Project">
    insert into project (id, name, description, 
      teamId, createTime, userId, 
      status, permission, envId
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{teamid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, #{envid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liuht.api.common.domain.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="teamid != null">
        teamId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="envid != null">
        envId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="teamid != null">
        #{teamid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="envid != null">
        #{envid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuht.api.common.domain.Project">
    update project
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="teamid != null">
        teamId = #{teamid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="envid != null">
        envId = #{envid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuht.api.common.domain.Project">
    update project
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      teamId = #{teamid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      envId = #{envid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.liuht.api.common.domain.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="teamId" jdbcType="INTEGER" property="teamid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="envId" jdbcType="INTEGER" property="envid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, teamId, createTime, userId, status, permission, envId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liuht.api.common.domain.Project">
    insert into project (id, name, description, 
      teamId, createTime, userId, 
      status, permission, envId
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{teamid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, #{envid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liuht.api.common.domain.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="teamid != null">
        teamId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="envid != null">
        envId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="teamid != null">
        #{teamid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="envid != null">
        #{envid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuht.api.common.domain.Project">
    update project
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="teamid != null">
        teamId = #{teamid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="envid != null">
        envId = #{envid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuht.api.common.domain.Project">
    update project
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      teamId = #{teamid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      envId = #{envid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.liuht.api.common.domain.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="teamId" jdbcType="INTEGER" property="teamid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.liuht.api.common.domain.Project">
    <result column="environments" jdbcType="LONGVARCHAR" property="environments" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, teamId, createTime, userId, status, permission
  </sql>
  <sql id="Blob_Column_List">
    environments
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liuht.api.common.domain.Project">
    insert into project (id, name, description, 
      teamId, createTime, userId, 
      status, permission, environments
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{teamid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, #{environments,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liuht.api.common.domain.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="teamid != null">
        teamId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="environments != null">
        environments,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="teamid != null">
        #{teamid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="environments != null">
        #{environments,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuht.api.common.domain.Project">
    update project
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="teamid != null">
        teamId = #{teamid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="environments != null">
        environments = #{environments,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.liuht.api.common.domain.Project">
    update project
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      teamId = #{teamid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      environments = #{environments,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuht.api.common.domain.Project">
    update project
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      teamId = #{teamid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>